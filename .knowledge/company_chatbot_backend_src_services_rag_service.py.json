{"is_source_file": true, "format": "Python", "description": "This source file implements vector-based retrieval functionalities, including index initialization, adding vectors, searching, and serialization/deserialization of embeddings. It integrates with FAISS for efficient similarity search, with a fallback to in-memory cosine similarity. The code appears to be part of a larger system for embedding-based retrieval or question-answering.", "external_files": ["faiss"], "external_methods": ["faiss.IndexFlatIP"], "published": ["ensure_index", "deterministic_embed", "add_vector", "search", "serialize_embedding_f32", "deserialize_embedding_f32"], "classes": [], "methods": [{"name": "None ensure_index(dim: int)", "description": "Initializes the FAISS index or fallback in-memory index if not already initialized.", "scope": "", "scopeKind": ""}, {"name": "List[float] deterministic_embed(text: str, dim: int)", "description": "Generates a deterministic pseudo-embedding vector from input text for consistent testing.", "scope": "", "scopeKind": ""}, {"name": "None add_vector(vec: List[float], meta: Dict[str, Any], dim: int)", "description": "Adds a vector and associated metadata to the index, updating FAISS or in-memory structures.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] search(vec: List[float], top_k: int)", "description": "Performs nearest neighbor search for a given vector, returning top_k results with similarity scores.", "scope": "", "scopeKind": ""}, {"name": "bytes serialize_embedding_f32(vec: List[float])", "description": "Serializes a list of floats into bytes for storage.", "scope": "", "scopeKind": ""}, {"name": "Optional[List[float]] deserialize_embedding_f32(buf: Optional[bytes])", "description": "Deserializes bytes back into a list of floats representing an embedding.", "scope": "", "scopeKind": ""}, {"name": "float _cosine(a: List[float], b: List[float])", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["faiss.IndexFlatIP", "np.array", "np.float32", "random.seed", "struct.pack", "struct.unpack"], "search-terms": ["rag_service", "FAISS index", "vector search", "embedding", "deterministic embedding", "in-memory fallback", "serialize embedding", "deserialize embedding"], "state": 2, "file_id": 17, "knowledge_revision": 56, "git_revision": "", "ctags": [{"_type": "tag", "name": "_DOCS", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/services/rag_service.py", "pattern": "/^_DOCS: List[Dict[str, Any]] = []$/", "language": "Python", "typeref": "typename:List[Dict[str, Any]]", "kind": "variable"}, {"_type": "tag", "name": "_INDEX", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/services/rag_service.py", "pattern": "/^_INDEX = None$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_VECS", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/services/rag_service.py", "pattern": "/^_VECS: List[List[float]] = []$/", "language": "Python", "typeref": "typename:List[List[float]]", "kind": "variable"}, {"_type": "tag", "name": "_cosine", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/services/rag_service.py", "pattern": "/^def _cosine(a: List[float], b: List[float]) -> float:$/", "language": "Python", "typeref": "typename:float", "kind": "function", "signature": "(a: List[float], b: List[float])"}, {"_type": "tag", "name": "add_vector", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/services/rag_service.py", "pattern": "/^def add_vector(vec: List[float], meta: Dict[str, Any], dim: int) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(vec: List[float], meta: Dict[str, Any], dim: int)"}, {"_type": "tag", "name": "deserialize_embedding_f32", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/services/rag_service.py", "pattern": "/^def deserialize_embedding_f32(buf: Optional[bytes]) -> Optional[List[float]]:$/", "language": "Python", "typeref": "typename:Optional[List[float]]", "kind": "function", "signature": "(buf: Optional[bytes])"}, {"_type": "tag", "name": "deterministic_embed", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/services/rag_service.py", "pattern": "/^def deterministic_embed(text: str, dim: int) -> List[float]:$/", "language": "Python", "typeref": "typename:List[float]", "kind": "function", "signature": "(text: str, dim: int)"}, {"_type": "tag", "name": "ensure_index", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/services/rag_service.py", "pattern": "/^def ensure_index(dim: int) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(dim: int)"}, {"_type": "tag", "name": "faiss", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/services/rag_service.py", "pattern": "/^    faiss = None  # fallback$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "np", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/services/rag_service.py", "pattern": "/^        import numpy as np$/", "file": true, "language": "Python", "kind": "namespace", "scope": "add_vector", "scopeKind": "function", "nameref": "module:numpy"}, {"_type": "tag", "name": "np", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/services/rag_service.py", "pattern": "/^        import numpy as np$/", "file": true, "language": "Python", "kind": "namespace", "scope": "search", "scopeKind": "function", "nameref": "module:numpy"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/services/rag_service.py", "pattern": "/^def search(vec: List[float], top_k: int) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(vec: List[float], top_k: int)"}, {"_type": "tag", "name": "serialize_embedding_f32", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/services/rag_service.py", "pattern": "/^def serialize_embedding_f32(vec: List[float]) -> bytes:$/", "language": "Python", "typeref": "typename:bytes", "kind": "function", "signature": "(vec: List[float])"}], "hash": "e9284037d73f8dc0f87acbf6d9c6ee3f", "format-version": 4, "code-base-name": "company_chatbot_backend", "filename": "company_chatbot_backend/src/services/rag_service.py", "fields": [{"name": "List[Dict[str, Any]] _DOCS", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_INDEX = None", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[List[float]] _VECS", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "faiss = None  # fallback", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"56": ""}]}