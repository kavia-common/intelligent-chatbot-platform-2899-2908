{"is_source_file": true, "format": "Python", "description": "This is a main application source file for a FastAPI-based backend supporting chat, authentication, and semantic retrieval functionalities. It defines API routes, models, utility functions, and configuration for the platform.", "external_files": [".lifespan"], "external_methods": ["lifespan"], "published": ["create_access_token", "get_current_user"], "classes": [{"name": "Settings", "description": "Application configuration settings loaded from environment variables."}, {"name": "HealthResponse", "description": "Response model for health check endpoint."}, {"name": "Token", "description": "Model representing an OAuth2 token."}, {"name": "UserSignup", "description": "Input model for user registration."}, {"name": "User", "description": "User data model exposed externally."}, {"name": "ConversationCreate", "description": "Model for creating a new conversation."}, {"name": "Conversation", "description": "Representation of a conversation/session."}, {"name": "MessageCreate", "description": "Model for sending a message."}, {"name": "Message", "description": "Representation of a message within a session."}, {"name": "RAGQuery", "description": "Input model for semantic search queries."}, {"name": "RAGResponse", "description": "Response model for semantic search results."}], "methods": [{"name": "str _hash_password(pw: str)", "description": "Hashes a password with SHA256.", "scope": "", "scopeKind": ""}, {"name": "bool _verify_password(pw: str, pw_hash: str)", "description": "Verifies a password against its hash.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] create_access_token(subject: str, expires_delta: Optional[timedelta] = None)", "description": "Creates a pseudo JWT token containing the subject and expiration.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] get_current_user(token: str = Depends(oauth2_scheme))", "description": "Retrieves the current user from an access token.", "scope": "", "scopeKind": ""}, {"name": "_ensure_faiss_index()", "description": "Initializes the FAISS index if not already initialized.", "scope": "", "scopeKind": ""}, {"name": "List[float] _embed_text(text: str)", "description": "Generates a deterministic embedding for a given text.", "scope": "", "scopeKind": ""}, {"name": "None _faiss_add(vec: List[float], meta: Dict[str, Any])", "description": "Adds a vector and associated metadata to the FAISS index.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] _faiss_search(vec: List[float], top_k: int)", "description": "Performs a similarity search in the FAISS index.", "scope": "", "scopeKind": ""}, {"name": "create_conversation(payload: ConversationCreate = Body(default_factory=ConversationCreate), user: Dict[str, Any] = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "dot(a, b)", "scope": "_faiss_search", "scopeKind": "function", "description": "unavailable"}, {"name": "get_messages(session_id: str = Path(..., description=\"Conversation/session ID\"), user: Dict[str, Any] = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "HealthResponse health_check()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ingest_documents(docs: List[Dict[str, str]] = Body(..., description=\"List of documents: {text: str, source?: str}\"), user: Dict[str, Any] = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "list_conversations(user: Dict[str, Any] = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "login(form_data: OAuth2PasswordRequestForm = Depends())", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "me(user: Dict[str, Any] = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "norm(a)", "scope": "_faiss_search", "scopeKind": "function", "description": "unavailable"}, {"name": "semantic_search(payload: RAGQuery, user: Dict[str, Any] = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "send_message(payload: MessageCreate, user: Dict[str, Any] = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "User signup(user_in: UserSignup)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["health_check", "signup", "login", "me", "create_conversation", "list_conversations", "get_messages", "send_message", "ingest_documents", "semantic_search"], "search-terms": ["FastAPI backend", "semantic retrieval", "FAISS index", "chat API", "authentication", "Ocean Professional theme", "in-memory data structures", "semantic search", "RAG", "API routes"], "state": 2, "file_id": 4, "knowledge_revision": 20, "git_revision": "24eb666cf75e91bb1bf78aefdcbaae5f6ac1ef57", "revision_history": [{"9": "24eb666cf75e91bb1bf78aefdcbaae5f6ac1ef57"}, {"10": "24eb666cf75e91bb1bf78aefdcbaae5f6ac1ef57"}, {"20": "24eb666cf75e91bb1bf78aefdcbaae5f6ac1ef57"}], "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    ACCESS_TOKEN_EXPIRE_MINUTES: int = 60 * 24$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "APP_DESCRIPTION", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    APP_DESCRIPTION: str = \"Ocean Professional themed API providing chat, authentication, and RA/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "APP_NAME", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    APP_NAME: str = \"Company Chatbot Backend\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "APP_VERSION", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    APP_VERSION: str = \"0.1.0\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "CORS_ALLOW_ORIGINS", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    CORS_ALLOW_ORIGINS: List[str] = Field(default_factory=lambda: [\"*\"])$/", "language": "Python", "typeref": "typename:List[str]", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "Conversation", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class Conversation(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ConversationCreate", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class ConversationCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "EMBEDDING_DIM", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    EMBEDDING_DIM: int = 384$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "HealthResponse", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class HealthResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Message", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class Message(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "MessageCreate", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class MessageCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "POSTGRES_URL", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    POSTGRES_URL: str = Field(default=\"\", description=\"SQLAlchemy style Postgres URL, e.g., post/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "RAGQuery", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class RAGQuery(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "RAGResponse", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class RAGResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    SECRET_KEY: str = Field(default=\"\", description=\"JWT secret key - set via environment\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "Settings", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class Settings(BaseSettings):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "THEME_META", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^THEME_META = {$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Token", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class Token(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class User(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserSignup", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class UserSignup(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_DB_DOCS", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^_DB_DOCS: List[Dict[str, Any]] = []  # corpus for RAG$/", "language": "Python", "typeref": "typename:List[Dict[str, Any]]", "kind": "variable"}, {"_type": "tag", "name": "_DB_MESSAGES", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^_DB_MESSAGES: Dict[str, List[Dict[str, Any]]] = {}  # key: session_id$/", "language": "Python", "typeref": "typename:Dict[str, List[Dict[str, Any]]]", "kind": "variable"}, {"_type": "tag", "name": "_DB_SESSIONS", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^_DB_SESSIONS: Dict[str, Dict[str, Any]] = {}  # key: session_id$/", "language": "Python", "typeref": "typename:Dict[str, Dict[str, Any]]", "kind": "variable"}, {"_type": "tag", "name": "_DB_USERS", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^_DB_USERS: Dict[str, Dict[str, Any]] = {}  # key: email$/", "language": "Python", "typeref": "typename:Dict[str, Dict[str, Any]]", "kind": "variable"}, {"_type": "tag", "name": "_FAISS_IDS", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^_FAISS_IDS: List[int] = []$/", "language": "Python", "typeref": "typename:List[int]", "kind": "variable"}, {"_type": "tag", "name": "_FAISS_INDEX", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^_FAISS_INDEX = None$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_FAISS_VECS", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^_FAISS_VECS: List[List[float]] = []$/", "language": "Python", "typeref": "typename:List[List[float]]", "kind": "variable"}, {"_type": "tag", "name": "_embed_text", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def _embed_text(text: str) -> List[float]:$/", "language": "Python", "typeref": "typename:List[float]", "kind": "function", "signature": "(text: str)"}, {"_type": "tag", "name": "_ensure_faiss_index", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def _ensure_faiss_index():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_faiss_add", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def _faiss_add(vec: List[float], meta: Dict[str, Any]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(vec: List[float], meta: Dict[str, Any])"}, {"_type": "tag", "name": "_faiss_search", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def _faiss_search(vec: List[float], top_k: int) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(vec: List[float], top_k: int)"}, {"_type": "tag", "name": "_hash_password", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def _hash_password(pw: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(pw: str)"}, {"_type": "tag", "name": "_verify_password", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def _verify_password(pw: str, pw_hash: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(pw: str, pw_hash: str)"}, {"_type": "tag", "name": "access_token", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    access_token: str = Field(..., description=\"Bearer token\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "auth_router", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^auth_router = APIRouter(prefix=\"\\/auth\", tags=[\"auth\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "chat_router", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^chat_router = APIRouter(prefix=\"\\/chat\", tags=[\"chat\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    content: str = Field(..., description=\"User message content\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "MessageCreate", "scopeKind": "class"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def create_access_token(subject: str, expires_delta: Optional[timedelta] = None) -> Dict[str, An/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(subject: str, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "create_conversation", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def create_conversation(payload: ConversationCreate = Body(default_factory=ConversationCreate), /", "language": "Python", "kind": "function", "signature": "(payload: ConversationCreate = Body(default_factory=ConversationCreate), user: Dict[str, Any] = Depends(get_current_user))"}, {"_type": "tag", "name": "dot", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^        def dot(a, b): return sum(x*y for x, y in zip(a, b))$/", "file": true, "language": "Python", "kind": "function", "signature": "(a, b)", "scope": "_faiss_search", "scopeKind": "function"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    email: EmailStr = Field(..., description=\"User email\")$/", "language": "Python", "typeref": "typename:EmailStr", "kind": "variable", "scope": "UserSignup", "scopeKind": "class"}, {"_type": "tag", "name": "env_file", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^        env_file = \".env\"$/", "language": "Python", "kind": "variable", "scope": "Settings.Config", "scopeKind": "class"}, {"_type": "tag", "name": "expires_at", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    expires_at: datetime = Field(..., description=\"Expiration timestamp\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "extra", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^        extra = \"ignore\"$/", "language": "Python", "kind": "variable", "scope": "Settings.Config", "scopeKind": "class"}, {"_type": "tag", "name": "faiss", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    faiss = None  # Will operate in in-memory fallback mode$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def get_current_user(token: str = Depends(oauth2_scheme)) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme))"}, {"_type": "tag", "name": "get_messages", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def get_messages(session_id: str = Path(..., description=\"Conversation\\/session ID\"), user: Dict/", "language": "Python", "kind": "function", "signature": "(session_id: str = Path(..., description=\"Conversation/session ID\"), user: Dict[str, Any] = Depends(get_current_user))"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def health_check() -> HealthResponse:$/", "language": "Python", "typeref": "typename:HealthResponse", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "health_router", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^health_router = APIRouter(tags=[\"health\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    id: str = Field(..., description=\"User ID\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "ingest_documents", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def ingest_documents(docs: List[Dict[str, str]] = Body(..., description=\"List of documents: {tex/", "language": "Python", "kind": "function", "signature": "(docs: List[Dict[str, str]] = Body(..., description=\"List of documents: {text: str, source?: str}\"), user: Dict[str, Any] = Depends(get_current_user))"}, {"_type": "tag", "name": "list_conversations", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def list_conversations(user: Dict[str, Any] = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(user: Dict[str, Any] = Depends(get_current_user))"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def login(form_data: OAuth2PasswordRequestForm = Depends()):$/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends())"}, {"_type": "tag", "name": "me", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def me(user: Dict[str, Any] = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(user: Dict[str, Any] = Depends(get_current_user))"}, {"_type": "tag", "name": "meta", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    meta: Dict[str, Any] = Field(..., description=\"Ocean Professional style metadata\")$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "HealthResponse", "scopeKind": "class"}, {"_type": "tag", "name": "meta", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    meta: Dict[str, Any] = Field(..., description=\"Style metadata\")$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "meta", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    meta: Dict[str, Any] = Field(default_factory=lambda: THEME_META)$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "Conversation", "scopeKind": "class"}, {"_type": "tag", "name": "meta", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    meta: Dict[str, Any] = Field(default_factory=lambda: THEME_META)$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "Message", "scopeKind": "class"}, {"_type": "tag", "name": "meta", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    meta: Dict[str, Any] = Field(default_factory=lambda: THEME_META)$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "RAGResponse", "scopeKind": "class"}, {"_type": "tag", "name": "meta", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    meta: Dict[str, Any] = Field(default_factory=lambda: THEME_META)$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    name: Optional[str] = Field(None, description=\"Display name\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "UserSignup", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    name: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "norm", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^        def norm(a): return sqrt(sum(x*x for x in a))$/", "file": true, "language": "Python", "kind": "function", "signature": "(a)", "scope": "_faiss_search", "scopeKind": "function"}, {"_type": "tag", "name": "np", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^        import numpy as np$/", "file": true, "language": "Python", "kind": "namespace", "scope": "_faiss_add", "scopeKind": "function", "nameref": "module:numpy"}, {"_type": "tag", "name": "np", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^        import numpy as np$/", "file": true, "language": "Python", "kind": "namespace", "scope": "_faiss_search", "scopeKind": "function", "nameref": "module:numpy"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    password: str = Field(..., min_length=6, description=\"Password (min 6 chars)\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserSignup", "scopeKind": "class"}, {"_type": "tag", "name": "query", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    query: str = Field(..., description=\"Natural language query\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "RAGQuery", "scopeKind": "class"}, {"_type": "tag", "name": "rag_router", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^rag_router = APIRouter(prefix=\"\\/rag\", tags=[\"rag\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "semantic_search", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def semantic_search(payload: RAGQuery, user: Dict[str, Any] = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(payload: RAGQuery, user: Dict[str, Any] = Depends(get_current_user))"}, {"_type": "tag", "name": "send_message", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def send_message(payload: MessageCreate, user: Dict[str, Any] = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(payload: MessageCreate, user: Dict[str, Any] = Depends(get_current_user))"}, {"_type": "tag", "name": "session_id", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    session_id: Optional[str] = Field(None, description=\"Conversation\\/session ID\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "MessageCreate", "scopeKind": "class"}, {"_type": "tag", "name": "settings", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^settings = Settings()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "signup", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def signup(user_in: UserSignup) -> User:$/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(user_in: UserSignup)"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    status: str = Field(..., description=\"Service status\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "HealthResponse", "scopeKind": "class"}, {"_type": "tag", "name": "time", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    time: datetime = Field(..., description=\"Server time\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "HealthResponse", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    title: Optional[str] = Field(None, description=\"Optional session title\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "ConversationCreate", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    title: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "Conversation", "scopeKind": "class"}, {"_type": "tag", "name": "token_type", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    token_type: str = Field(default=\"bearer\", description=\"Token type\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "top_k", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    top_k: int = Field(3, ge=1, le=10, description=\"Number of passages to retrieve\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "RAGQuery", "scopeKind": "class"}], "hash": "a879134accba3a96175fd8b0188d4c5b", "format-version": 4, "code-base-name": "company_chatbot_backend", "filename": "company_chatbot_backend/src/api/main.py", "fields": [{"name": "int ACCESS_TOKEN_EXPIRE_MINUTES", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "str APP_DESCRIPTION", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "str APP_NAME", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "str APP_VERSION", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "List[str] CORS_ALLOW_ORIGINS", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "int EMBEDDING_DIM", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "str POSTGRES_URL", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "str SECRET_KEY", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "THEME_META = {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[Dict[str, Any]] _DB_DOCS", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Dict[str, List[Dict[str, Any]]] _DB_MESSAGES", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Dict[str, Dict[str, Any]] _DB_SESSIONS", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Dict[str, Dict[str, Any]] _DB_USERS", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[int] _FAISS_IDS", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_FAISS_INDEX = None", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[List[float]] _FAISS_VECS", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str access_token", "scope": "Token", "scopeKind": "class", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "auth_router = APIRouter(prefix=\"\\/auth\", tags=[\"auth\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "chat_router = APIRouter(prefix=\"\\/chat\", tags=[\"chat\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str content", "scope": "MessageCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "EmailStr email", "scope": "UserSignup", "scopeKind": "class", "description": "unavailable"}, {"name": "env_file = \".env\"", "scope": "Settings.Config", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime expires_at", "scope": "Token", "scopeKind": "class", "description": "unavailable"}, {"name": "extra = \"ignore\"", "scope": "Settings.Config", "scopeKind": "class", "description": "unavailable"}, {"name": "faiss = None  # Will operate in in-memory fallback mode", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "health_router = APIRouter(tags=[\"health\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str id", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str, Any] meta", "scope": "HealthResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] name", "scope": "UserSignup", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str password", "scope": "UserSignup", "scopeKind": "class", "description": "unavailable"}, {"name": "str query", "scope": "RAGQuery", "scopeKind": "class", "description": "unavailable"}, {"name": "rag_router = APIRouter(prefix=\"\\/rag\", tags=[\"rag\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] session_id", "scope": "MessageCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "settings = Settings()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str status", "scope": "HealthResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime time", "scope": "HealthResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] title", "scope": "ConversationCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "str token_type", "scope": "Token", "scopeKind": "class", "description": "unavailable"}, {"name": "int top_k", "scope": "RAGQuery", "scopeKind": "class", "description": "unavailable"}]}