{"is_source_file": true, "format": "Python", "description": "Main FastAPI application source code for the company's chatbot backend. It includes configuration, health check, authentication, chat session handling, message processing, and semantic retrieval via RAG and FAISS.", "external_files": ["src/db/database", "src/db/repositories", "src.services.rag_service", "src.services.openai_client", "src.auth_utils", "src.rag_core", "src.db.repositories.get_user_by_email", "src.db.repositories.create_user", "src.db.repositories.add_chat_message", "src.db.repositories.ingest_documents", "src.services.openai_client.openai_chat_completion", "src.services.openai_client.ensure_openai_key"], "external_methods": ["decode_jwt_token", "hash_password", "verify_password", "create_jwt_token", "get_db", "faiss_search", "embed_text", "ensure_faiss_index", "faiss_add", "serialize_embedding_f32", "ensure_openai_key", "openai_chat_completion"], "published": ["app", "health_check", "signup", "login", "me", "create_conversation", "list_conversations", "get_messages", "send_message", "ingest_documents", "semantic_search"], "classes": [{"name": "Settings", "description": "Configuration class for application environment variables, including database, security, and API settings."}, {"name": "HealthResponse", "description": "Schema for health check response."}, {"name": "Token", "description": "Schema for JWT token response."}, {"name": "UserSignup", "description": "Schema for new user registration input."}, {"name": "User", "description": "Schema representing a user object."}, {"name": "ConversationCreate", "description": "Schema for creating a new conversation."}, {"name": "Conversation", "description": "Schema for representing a conversation/session."}, {"name": "MessageCreate", "description": "Schema for creating a new user message."}, {"name": "Message", "description": "Schema for a message in a conversation."}, {"name": "RAGQuery", "description": "Schema for semantic search query."}, {"name": "RAGResponse", "description": "Schema for semantic search results and answer."}], "methods": [{"name": "Dict[str,Any] get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))", "description": "Dependency to extract and verify JWT token, retrieve user info.", "scope": "", "scopeKind": ""}, {"name": "HealthResponse health_check()", "description": "API endpoint for health status of the service.", "scope": "", "scopeKind": ""}, {"name": "User signup(user_in: UserSignup, db: Session = Depends(get_db))", "description": "Create new user account and store in database.", "scope": "", "scopeKind": ""}, {"name": "login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))", "description": "Authenticate user and issue JWT token.", "scope": "", "scopeKind": ""}, {"name": "me(user: Dict[str, Any] = Depends(get_current_user))", "description": "Get current authenticated user's details.", "scope": "", "scopeKind": ""}, {"name": "create_conversation(payload: ConversationCreate = Body(default_factory=ConversationCreate), user: Dict[str, Any] = Depends(get_current_user))", "description": "Start a new chat session.", "scope": "", "scopeKind": ""}, {"name": "list_conversations(user: Dict[str, Any] = Depends(get_current_user))", "description": "Retrieve list of user conversations (not persisted).", "scope": "", "scopeKind": ""}, {"name": "get_messages(session_id: str = Path(..., description=\"Conversation/session ID\"), user: Dict[str, Any] = Depends(get_current_user))", "description": "Retrieve messages for a session.", "scope": "", "scopeKind": ""}, {"name": "send_message(payload: MessageCreate, user: Dict[str, Any] = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Send a user message, retrieve context via RAG, generate reply with LLM fallback.", "scope": "", "scopeKind": ""}, {"name": "ingest_documents( docs: List[Dict[str, str]] = Body(..., description=\"List of documents: {text: str, source?: str}\"), user: Dict[str, Any] = Depends(get_current_user), db: Session = Depends(get_db), )", "description": "Add documents into FAISS index for semantic search.", "scope": "", "scopeKind": ""}, {"name": "semantic_search(payload: RAGQuery, user: Dict[str, Any] = Depends(get_current_user))", "description": "Perform semantic search over ingested documents.", "scope": "", "scopeKind": ""}, {"name": "log_request_host(request: Request, call_next)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["decode_jwt_token", "hash_password", "verify_password", "create_jwt_token", "get_db", "faiss_search", "embed_text", "ensure_faiss_index", "faiss_add", "serialize_embedding_f32", "ensure_openai_key", "openai_chat_completion"], "search-terms": ["FastAPI", "RAG", "FAISS", "semantic search", "chat session", "authentication", "JWT", "ingest documents", "OpenAI API", "Ocean Professional theme"], "state": 2, "file_id": 4, "knowledge_revision": 62, "git_revision": "5302c16cf9e27a20a70b8255602751945f566dfd", "revision_history": [{"9": "24eb666cf75e91bb1bf78aefdcbaae5f6ac1ef57"}, {"10": "24eb666cf75e91bb1bf78aefdcbaae5f6ac1ef57"}, {"20": "24eb666cf75e91bb1bf78aefdcbaae5f6ac1ef57"}, {"26": "80d89d3e0613b22ca38f8f1f93dd1fe519b7518b"}, {"30": "80d89d3e0613b22ca38f8f1f93dd1fe519b7518b"}, {"34": "8148ea6c7e0444f1e91705faa14cbaf73ffe3256"}, {"36": "b3b7eda379e8a8604b605bc58675fa12770b28d1"}, {"37": "b3b7eda379e8a8604b605bc58675fa12770b28d1"}, {"38": "b3b7eda379e8a8604b605bc58675fa12770b28d1"}, {"39": "b3b7eda379e8a8604b605bc58675fa12770b28d1"}, {"41": "a16753b86a48985354efd5cb6227e5a8e0ac53ed"}, {"45": "092ddc9a4c70e75bb25f309811aa56d08f072407"}, {"46": "092ddc9a4c70e75bb25f309811aa56d08f072407"}, {"47": "092ddc9a4c70e75bb25f309811aa56d08f072407"}, {"57": "b2091b651b5d524538cbef75b6624e9498c87982"}, {"62": "5302c16cf9e27a20a70b8255602751945f566dfd"}], "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    ACCESS_TOKEN_EXPIRE_MINUTES: int = 60 * 24$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "ALLOWED_HOSTS", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    ALLOWED_HOSTS: List[str] = Field($/", "language": "Python", "typeref": "typename:List[str]", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "APP_DESCRIPTION", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    APP_DESCRIPTION: str = \"Ocean Professional themed API providing chat, authentication, and RA/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "APP_NAME", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    APP_NAME: str = \"Company Chatbot Backend\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "APP_VERSION", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    APP_VERSION: str = \"0.1.0\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "CORE_THEME_META", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^from .rag_core import THEME_META as CORE_THEME_META$/", "language": "Python", "kind": "unknown", "nameref": "unknown:THEME_META"}, {"_type": "tag", "name": "CORS_ALLOW_ORIGINS", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    CORS_ALLOW_ORIGINS: List[str] = Field($/", "language": "Python", "typeref": "typename:List[str]", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "Conversation", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class Conversation(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ConversationCreate", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class ConversationCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "EMBEDDING_DIM", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    EMBEDDING_DIM: int = 384$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "HealthResponse", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class HealthResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Message", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class Message(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "MessageCreate", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class MessageCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "OPENAI_API_KEY", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    OPENAI_API_KEY: str = Field(default=\"\", description=\"OpenAI API key (read from environment; /", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "OPENAI_BASE_URL", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    OPENAI_BASE_URL: str = Field(default=\"https:\\/\\/api.openai.com\\/v1\", description=\"Base URL f/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "OPENAI_MODEL", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    OPENAI_MODEL: str = Field(default=\"gpt-4o-mini\", description=\"Default OpenAI model to use (o/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "POSTGRES_URL", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    POSTGRES_URL: str = Field(default=\"\", description=\"SQLAlchemy style Postgres URL, e.g., post/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "RAGQuery", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class RAGQuery(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "RAGResponse", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class RAGResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    SECRET_KEY: str = Field(default=\"\", description=\"JWT secret key - set via environment\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "Settings", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class Settings(BaseSettings):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "THEME_META", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^THEME_META = CORE_THEME_META$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Token", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class Token(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class User(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserSignup", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^class UserSignup(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_get", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^        from src.db.repositories import get_user_by_email as _get$/", "file": true, "language": "Python", "kind": "unknown", "scope": "get_current_user", "scopeKind": "function", "nameref": "unknown:get_user_by_email"}, {"_type": "tag", "name": "access_token", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    access_token: str = Field(..., description=\"Bearer token\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "allowed_hosts", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^allowed_hosts = [h.strip() for h in settings.ALLOWED_HOSTS if str(h).strip()]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "auth_router", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^auth_router = APIRouter(prefix=\"\\/auth\", tags=[\"auth\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "chat_router", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^chat_router = APIRouter(prefix=\"\\/chat\", tags=[\"chat\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    content: str = Field(..., description=\"User message content\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "MessageCreate", "scopeKind": "class"}, {"_type": "tag", "name": "create_conversation", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def create_conversation(payload: ConversationCreate = Body(default_factory=ConversationCreate), /", "language": "Python", "kind": "function", "signature": "(payload: ConversationCreate = Body(default_factory=ConversationCreate), user: Dict[str, Any] = Depends(get_current_user))"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    email: EmailStr = Field(..., description=\"User email\")$/", "language": "Python", "typeref": "typename:EmailStr", "kind": "variable", "scope": "UserSignup", "scopeKind": "class"}, {"_type": "tag", "name": "embed_text", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    deterministic_embed as embed_text,$/", "language": "Python", "kind": "unknown", "nameref": "unknown:deterministic_embed"}, {"_type": "tag", "name": "ensure_faiss_index", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    ensure_index as ensure_faiss_index,$/", "language": "Python", "kind": "unknown", "nameref": "unknown:ensure_index"}, {"_type": "tag", "name": "expires_at", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    expires_at: datetime = Field(..., description=\"Expiration timestamp\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "faiss_add", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    add_vector as faiss_add,$/", "language": "Python", "kind": "unknown", "nameref": "unknown:add_vector"}, {"_type": "tag", "name": "faiss_search", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    search as faiss_search,$/", "language": "Python", "kind": "unknown", "nameref": "unknown:search"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db)) -> Dict/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_messages", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def get_messages(session_id: str = Path(..., description=\"Conversation\\/session ID\"), user: Dict/", "language": "Python", "kind": "function", "signature": "(session_id: str = Path(..., description=\"Conversation/session ID\"), user: Dict[str, Any] = Depends(get_current_user))"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def health_check() -> HealthResponse:$/", "language": "Python", "typeref": "typename:HealthResponse", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "health_router", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^health_router = APIRouter(tags=[\"health\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    id: str = Field(..., description=\"User ID\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "ingest_documents", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def ingest_documents($/", "language": "Python", "kind": "function", "signature": "( docs: List[Dict[str, str]] = Body(..., description=\"List of documents: {text: str, source?: str}\"), user: Dict[str, Any] = Depends(get_current_user), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "list_conversations", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def list_conversations(user: Dict[str, Any] = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(user: Dict[str, Any] = Depends(get_current_user))"}, {"_type": "tag", "name": "log_request_host", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^async def log_request_host(request: Request, call_next):$/", "language": "Python", "kind": "function", "signature": "(request: Request, call_next)"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^logger = logging.getLogger(\"uvicorn.error\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "me", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def me(user: Dict[str, Any] = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(user: Dict[str, Any] = Depends(get_current_user))"}, {"_type": "tag", "name": "meta", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    meta: Dict[str, Any] = Field(..., description=\"Ocean Professional style metadata\")$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "HealthResponse", "scopeKind": "class"}, {"_type": "tag", "name": "meta", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    meta: Dict[str, Any] = Field(..., description=\"Style metadata\")$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "meta", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    meta: Dict[str, Any] = Field(default_factory=lambda: THEME_META)$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "Conversation", "scopeKind": "class"}, {"_type": "tag", "name": "meta", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    meta: Dict[str, Any] = Field(default_factory=lambda: THEME_META)$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "Message", "scopeKind": "class"}, {"_type": "tag", "name": "meta", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    meta: Dict[str, Any] = Field(default_factory=lambda: THEME_META)$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "RAGResponse", "scopeKind": "class"}, {"_type": "tag", "name": "meta", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    meta: Dict[str, Any] = Field(default_factory=lambda: THEME_META)$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "model_config", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    model_config = SettingsConfigDict(env_file=\".env\", extra=\"ignore\")$/", "language": "Python", "kind": "variable", "scope": "Settings", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    name: Optional[str] = Field(None, description=\"Display name\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "UserSignup", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    name: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    password: str = Field(..., min_length=6, description=\"Password (min 6 chars)\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserSignup", "scopeKind": "class"}, {"_type": "tag", "name": "query", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    query: str = Field(..., description=\"Natural language query\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "RAGQuery", "scopeKind": "class"}, {"_type": "tag", "name": "rag_router", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^rag_router = APIRouter(prefix=\"\\/rag\", tags=[\"rag\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "repo_add_chat_message", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    add_chat_message as repo_add_chat_message,$/", "language": "Python", "kind": "unknown", "nameref": "unknown:add_chat_message"}, {"_type": "tag", "name": "repo_create_user", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    create_user as repo_create_user,$/", "language": "Python", "kind": "unknown", "nameref": "unknown:create_user"}, {"_type": "tag", "name": "repo_get_user_by_email", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    get_user_by_email as repo_get_user_by_email,$/", "language": "Python", "kind": "unknown", "nameref": "unknown:get_user_by_email"}, {"_type": "tag", "name": "repo_ingest_documents", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    ingest_documents as repo_ingest_documents,$/", "language": "Python", "kind": "unknown", "nameref": "unknown:ingest_documents"}, {"_type": "tag", "name": "semantic_search", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def semantic_search(payload: RAGQuery, user: Dict[str, Any] = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(payload: RAGQuery, user: Dict[str, Any] = Depends(get_current_user))"}, {"_type": "tag", "name": "send_message", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def send_message(payload: MessageCreate, user: Dict[str, Any] = Depends(get_current_user), db: S/", "language": "Python", "kind": "function", "signature": "(payload: MessageCreate, user: Dict[str, Any] = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "session_id", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    session_id: Optional[str] = Field(None, description=\"Conversation\\/session ID\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "MessageCreate", "scopeKind": "class"}, {"_type": "tag", "name": "settings", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^settings = Settings()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "signup", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^def signup(user_in: UserSignup, db: Session = Depends(get_db)) -> User:$/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(user_in: UserSignup, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    status: str = Field(..., description=\"Service status\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "HealthResponse", "scopeKind": "class"}, {"_type": "tag", "name": "time", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    time: datetime = Field(..., description=\"Server time\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "HealthResponse", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    title: Optional[str] = Field(None, description=\"Optional session title\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "ConversationCreate", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    title: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "Conversation", "scopeKind": "class"}, {"_type": "tag", "name": "token_type", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    token_type: str = Field(default=\"bearer\", description=\"Token type\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "top_k", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/main.py", "pattern": "/^    top_k: int = Field(3, ge=1, le=10, description=\"Number of passages to retrieve\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "RAGQuery", "scopeKind": "class"}], "hash": "bf8f3b2d47fb15e0033bea1fe4ae285b", "format-version": 4, "code-base-name": "company_chatbot_backend", "filename": "company_chatbot_backend/src/api/main.py", "fields": [{"name": "int ACCESS_TOKEN_EXPIRE_MINUTES", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "List[str] ALLOWED_HOSTS", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "str APP_DESCRIPTION", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "str APP_NAME", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "str APP_VERSION", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "List[str] CORS_ALLOW_ORIGINS", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "int EMBEDDING_DIM", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "str OPENAI_API_KEY", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "str OPENAI_BASE_URL", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "str OPENAI_MODEL", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "str POSTGRES_URL", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "str SECRET_KEY", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "THEME_META = CORE_THEME_META", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str access_token", "scope": "Token", "scopeKind": "class", "description": "unavailable"}, {"name": "allowed_hosts = [h.strip() for h in settings.ALLOWED_HOSTS if str(h).strip()]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "auth_router = APIRouter(prefix=\"\\/auth\", tags=[\"auth\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "chat_router = APIRouter(prefix=\"\\/chat\", tags=[\"chat\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str content", "scope": "MessageCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "EmailStr email", "scope": "UserSignup", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime expires_at", "scope": "Token", "scopeKind": "class", "description": "unavailable"}, {"name": "health_router = APIRouter(tags=[\"health\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str id", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "logger = logging.getLogger(\"uvicorn.error\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Dict[str, Any] meta", "scope": "HealthResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "model_config = SettingsConfigDict(env_file=\".env\", extra=\"ignore\")", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] name", "scope": "UserSignup", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str password", "scope": "UserSignup", "scopeKind": "class", "description": "unavailable"}, {"name": "str query", "scope": "RAGQuery", "scopeKind": "class", "description": "unavailable"}, {"name": "rag_router = APIRouter(prefix=\"\\/rag\", tags=[\"rag\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] session_id", "scope": "MessageCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "settings = Settings()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str status", "scope": "HealthResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime time", "scope": "HealthResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] title", "scope": "ConversationCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "str token_type", "scope": "Token", "scopeKind": "class", "description": "unavailable"}, {"name": "int top_k", "scope": "RAGQuery", "scopeKind": "class", "description": "unavailable"}]}