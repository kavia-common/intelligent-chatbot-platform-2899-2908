{"is_source_file": true, "format": "Python", "description": "This file contains database repository functions for managing users, chat messages, and documents within a chatbot backend. It interacts with SQLAlchemy ORM models and provides functions to create, retrieve, and list data entries, as well as ingest documents.", "external_files": ["./models"], "external_methods": ["sqlalchemy.select", "sqlalchemy.func", "sqlalchemy.insert", "sqlalchemy.orm.Session", "UserModel", "ChatMessageModel", "DocumentModel"], "published": ["create_user", "get_user_by_email", "add_chat_message", "list_user_messages", "ingest_documents", "list_documents"], "classes": [], "methods": [{"name": "UserModel create_user(db: Session, email: str, password_hash: str, name: Optional[str] = None)", "description": "Creates a new user record in the database with email, password hash, optional name, and current timestamp.", "scope": "", "scopeKind": ""}, {"name": "Optional[UserModel] get_user_by_email(db: Session, email: str)", "description": "Fetches a user record from the database matching the provided email, case-insensitive.", "scope": "", "scopeKind": ""}, {"name": "ChatMessageModel add_chat_message(db: Session, user_id: str, message_text: str)", "description": "Inserts a new chat message linked to a user, timestamped at creation.", "scope": "", "scopeKind": ""}, {"name": "List[ChatMessageModel] list_user_messages(db: Session, user_id: str, limit: int = 100)", "description": "Retrieves recent chat messages for a user, limited by count.", "scope": "", "scopeKind": ""}, {"name": "int ingest_documents(db: Session, docs: List[Dict[str, Any]])", "description": "Bulk inserts multiple documents, handling optional fields and embeddings, returning the number of inserted records.", "scope": "", "scopeKind": ""}, {"name": "List[DocumentModel] list_documents(db: Session, limit: int = 100)", "description": "Lists recent documents in the database ordered by creation time.", "scope": "", "scopeKind": ""}], "calls": ["select(UserModel).where(func.lower(UserModel.email) == email.lower())", "select(ChatMessageModel).where(ChatMessageModel.user_id == user_id).order_by(ChatMessageModel.created_at.desc()).limit(limit)", "select(DocumentModel).order_by(DocumentModel.created_at.desc()).limit(limit)"], "search-terms": ["database repository", "user management", "chat message storage", "document ingestion", "SQLAlchemy ORM", "backend data access"], "state": 2, "file_id": 16, "knowledge_revision": 54, "git_revision": "", "ctags": [{"_type": "tag", "name": "add_chat_message", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/db/repositories.py", "pattern": "/^def add_chat_message(db: Session, user_id: str, message_text: str) -> ChatMessageModel:$/", "language": "Python", "typeref": "typename:ChatMessageModel", "kind": "function", "signature": "(db: Session, user_id: str, message_text: str)"}, {"_type": "tag", "name": "create_user", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/db/repositories.py", "pattern": "/^def create_user(db: Session, email: str, password_hash: str, name: Optional[str] = None) -> User/", "language": "Python", "typeref": "typename:UserModel", "kind": "function", "signature": "(db: Session, email: str, password_hash: str, name: Optional[str] = None)"}, {"_type": "tag", "name": "get_user_by_email", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/db/repositories.py", "pattern": "/^def get_user_by_email(db: Session, email: str) -> Optional[UserModel]:$/", "language": "Python", "typeref": "typename:Optional[UserModel]", "kind": "function", "signature": "(db: Session, email: str)"}, {"_type": "tag", "name": "ingest_documents", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/db/repositories.py", "pattern": "/^def ingest_documents(db: Session, docs: List[Dict[str, Any]]) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "function", "signature": "(db: Session, docs: List[Dict[str, Any]])"}, {"_type": "tag", "name": "list_documents", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/db/repositories.py", "pattern": "/^def list_documents(db: Session, limit: int = 100) -> List[DocumentModel]:$/", "language": "Python", "typeref": "typename:List[DocumentModel]", "kind": "function", "signature": "(db: Session, limit: int = 100)"}, {"_type": "tag", "name": "list_user_messages", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/db/repositories.py", "pattern": "/^def list_user_messages(db: Session, user_id: str, limit: int = 100) -> List[ChatMessageModel]:$/", "language": "Python", "typeref": "typename:List[ChatMessageModel]", "kind": "function", "signature": "(db: Session, user_id: str, limit: int = 100)"}], "hash": "3cd2a1f9abc537d8643e76e8d261307f", "format-version": 4, "code-base-name": "company_chatbot_backend", "filename": "company_chatbot_backend/src/db/repositories.py", "revision_history": [{"54": ""}]}