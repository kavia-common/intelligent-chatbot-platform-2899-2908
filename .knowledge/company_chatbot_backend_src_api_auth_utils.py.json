{"is_source_file": true, "format": "Python", "description": "This file provides utility functions and classes related to authentication in a Python web backend, including JWT token creation and verification, password hashing and verification, and loading of auth settings from environment variables.", "external_files": ["os", "hmac", "hashlib", "datetime", "pydantic"], "external_methods": ["jwt.encode", "jwt.decode"], "published": ["AuthSettings", "get_auth_settings", "hash_password", "verify_password", "create_jwt_token", "decode_jwt_token"], "classes": [{"name": "AuthSettings", "description": "Configuration class for authentication settings loaded from environment variables, using pydantic for data validation."}], "methods": [{"name": "AuthSettings get_auth_settings()", "description": "Returns an instance of AuthSettings populated with current environment variables.", "scope": "", "scopeKind": ""}, {"name": "_ensure_secret(secret: str)", "description": "Checks that the secret key is set and sufficiently long, otherwise raises RuntimeError.", "scope": "", "scopeKind": ""}, {"name": "str hash_password(password: str)", "description": "Creates a HMAC-SHA256 hash of a password using SECRET_KEY as salt.", "scope": "", "scopeKind": ""}, {"name": "bool verify_password(password: str, hashed: str)", "description": "Verifies a password against a hashed version using HMAC comparison.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] create_jwt_token(subject: str, expires_delta: Optional[timedelta] = None)", "description": "Generates a JWT token with subject and expiration, using PyJWT if available, or a fallback string.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] decode_jwt_token(token: str)", "description": "Decodes and verifies a JWT token, supporting dev fallback tokens.", "scope": "", "scopeKind": ""}], "calls": ["get_auth_settings()", "os.environ.get", "hmac.new", "hmac.compare_digest", "jwt.encode", "jwt.decode", "datetime.now"], "search-terms": ["JWT", "auth", "password hashing", "environment config", "token creation"], "state": 2, "file_id": 15, "knowledge_revision": 52, "git_revision": "", "ctags": [{"_type": "tag", "name": "AuthSettings", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/auth_utils.py", "pattern": "/^class AuthSettings(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_ensure_secret", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/auth_utils.py", "pattern": "/^def _ensure_secret(secret: str):$/", "language": "Python", "kind": "function", "signature": "(secret: str)"}, {"_type": "tag", "name": "access_token_expire_minutes", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/auth_utils.py", "pattern": "/^    access_token_expire_minutes: int = Field(default=int(os.environ.get(\"ACCESS_TOKEN_EXPIRE_MIN/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "AuthSettings", "scopeKind": "class"}, {"_type": "tag", "name": "algorithm", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/auth_utils.py", "pattern": "/^    algorithm: str = Field(default=\"HS256\", description=\"JWT signing algorithm\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "AuthSettings", "scopeKind": "class"}, {"_type": "tag", "name": "create_jwt_token", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/auth_utils.py", "pattern": "/^def create_jwt_token(subject: str, expires_delta: Optional[timedelta] = None) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(subject: str, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "decode_jwt_token", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/auth_utils.py", "pattern": "/^def decode_jwt_token(token: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "get_auth_settings", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/auth_utils.py", "pattern": "/^def get_auth_settings() -> AuthSettings:$/", "language": "Python", "typeref": "typename:AuthSettings", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "hash_password", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/auth_utils.py", "pattern": "/^def hash_password(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "jwt", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/auth_utils.py", "pattern": "/^    jwt = None$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "secret_key", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/auth_utils.py", "pattern": "/^    secret_key: str = Field(default=os.environ.get(\"SECRET_KEY\", \"\"), description=\"JWT secret ke/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "AuthSettings", "scopeKind": "class"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/auth_utils.py", "pattern": "/^def verify_password(password: str, hashed: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(password: str, hashed: str)"}], "hash": "ed530a111968243c5210576858f2dcfc", "format-version": 4, "code-base-name": "company_chatbot_backend", "filename": "company_chatbot_backend/src/api/auth_utils.py", "fields": [{"name": "int access_token_expire_minutes", "scope": "AuthSettings", "scopeKind": "class", "description": "unavailable"}, {"name": "str algorithm", "scope": "AuthSettings", "scopeKind": "class", "description": "unavailable"}, {"name": "jwt = None", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str secret_key", "scope": "AuthSettings", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"52": ""}]}