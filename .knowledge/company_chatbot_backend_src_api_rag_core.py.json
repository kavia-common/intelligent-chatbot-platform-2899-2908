{"is_source_file": true, "format": "Python", "description": "This file contains core utilities and in-memory data stores for a Retrieval-Augmented Generation (RAG) system, including FAISS index handling, embedding creation, in-memory database management, and configuration metadata, tailored to support a chat-based AI platform.", "external_files": ["faiss"], "external_methods": ["faiss.IndexFlatIP"], "published": ["get_in_memory_stores", "ensure_faiss_index", "embed_text", "faiss_add", "faiss_search"], "classes": [], "methods": [{"name": "Dict[str,Any] get_in_memory_stores()", "description": "Returns references to shared in-memory stores used by the API, facilitating access or mutation across modules without cross-import issues.", "scope": "", "scopeKind": ""}, {"name": "None ensure_faiss_index(embedding_dim: int)", "description": "Initializes the FAISS index or its fallback if already initialized.", "scope": "", "scopeKind": ""}, {"name": "List[float] embed_text(text: str, embedding_dim: int)", "description": "Creates a deterministic pseudo-embedding for a given text string for testing or fallback purposes.", "scope": "", "scopeKind": ""}, {"name": "None faiss_add(vec: List[float], meta: Dict[str, Any], embedding_dim: int)", "description": "Adds a vector and its metadata to the FAISS index or fallback store.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] faiss_search(vec: List[float], top_k: int)", "description": "Performs a search in the FAISS index or in-memory cosine similarity fallback, returning top-k results.", "scope": "", "scopeKind": ""}, {"name": "dot(a, b)", "scope": "faiss_search", "scopeKind": "function", "description": "unavailable"}, {"name": "norm(a)", "scope": "faiss_search", "scopeKind": "function", "description": "unavailable"}], "calls": ["faiss.IndexFlatIP", "np.array", "np.array", "np.array", "faiss.IndexFlatIP", "import numpy as np"], "search-terms": ["rag_core", "faiss index", "in-memory stores", "embed_text", "faiss add", "faiss search", "FAISS_IN_MEMORY_RAG"], "state": 2, "file_id": 11, "knowledge_revision": 35, "git_revision": "8148ea6c7e0444f1e91705faa14cbaf73ffe3256", "revision_history": [{"28": ""}, {"35": "8148ea6c7e0444f1e91705faa14cbaf73ffe3256"}], "ctags": [{"_type": "tag", "name": "THEME_META", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^THEME_META = {$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_DB_DOCS", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^_DB_DOCS: List[Dict[str, Any]] = []  # corpus for RAG$/", "language": "Python", "typeref": "typename:List[Dict[str, Any]]", "kind": "variable"}, {"_type": "tag", "name": "_DB_MESSAGES", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^_DB_MESSAGES: Dict[str, List[Dict[str, Any]]] = {}  # key: session_id$/", "language": "Python", "typeref": "typename:Dict[str, List[Dict[str, Any]]]", "kind": "variable"}, {"_type": "tag", "name": "_DB_SESSIONS", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^_DB_SESSIONS: Dict[str, Dict[str, Any]] = {}  # key: session token$/", "language": "Python", "typeref": "typename:Dict[str, Dict[str, Any]]", "kind": "variable"}, {"_type": "tag", "name": "_DB_USERS", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^_DB_USERS: Dict[str, Dict[str, Any]] = {}  # key: email$/", "language": "Python", "typeref": "typename:Dict[str, Dict[str, Any]]", "kind": "variable"}, {"_type": "tag", "name": "_FAISS_IDS", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^_FAISS_IDS: List[int] = []$/", "language": "Python", "typeref": "typename:List[int]", "kind": "variable"}, {"_type": "tag", "name": "_FAISS_INDEX", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^_FAISS_INDEX = None$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_FAISS_VECS", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^_FAISS_VECS: List[List[float]] = []$/", "language": "Python", "typeref": "typename:List[List[float]]", "kind": "variable"}, {"_type": "tag", "name": "dot", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^        def dot(a, b):$/", "file": true, "language": "Python", "kind": "function", "signature": "(a, b)", "scope": "faiss_search", "scopeKind": "function"}, {"_type": "tag", "name": "embed_text", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^def embed_text(text: str, embedding_dim: int) -> List[float]:$/", "language": "Python", "typeref": "typename:List[float]", "kind": "function", "signature": "(text: str, embedding_dim: int)"}, {"_type": "tag", "name": "ensure_faiss_index", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^def ensure_faiss_index(embedding_dim: int) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(embedding_dim: int)"}, {"_type": "tag", "name": "faiss", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^    faiss = None  # Will operate in in-memory fallback mode$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "faiss_add", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^def faiss_add(vec: List[float], meta: Dict[str, Any], embedding_dim: int) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(vec: List[float], meta: Dict[str, Any], embedding_dim: int)"}, {"_type": "tag", "name": "faiss_search", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^def faiss_search(vec: List[float], top_k: int) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(vec: List[float], top_k: int)"}, {"_type": "tag", "name": "get_in_memory_stores", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^def get_in_memory_stores() -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "norm", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^        def norm(a):$/", "file": true, "language": "Python", "kind": "function", "signature": "(a)", "scope": "faiss_search", "scopeKind": "function"}, {"_type": "tag", "name": "np", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^        import numpy as np$/", "file": true, "language": "Python", "kind": "namespace", "scope": "faiss_add", "scopeKind": "function", "nameref": "module:numpy"}, {"_type": "tag", "name": "np", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2908/company_chatbot_backend/src/api/rag_core.py", "pattern": "/^        import numpy as np$/", "file": true, "language": "Python", "kind": "namespace", "scope": "faiss_search", "scopeKind": "function", "nameref": "module:numpy"}], "hash": "9ddfc30d5c8f95f0d6684d9a52de664a", "format-version": 4, "code-base-name": "company_chatbot_backend", "filename": "company_chatbot_backend/src/api/rag_core.py", "fields": [{"name": "THEME_META = {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[Dict[str, Any]] _DB_DOCS", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Dict[str, List[Dict[str, Any]]] _DB_MESSAGES", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Dict[str, Dict[str, Any]] _DB_SESSIONS", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Dict[str, Dict[str, Any]] _DB_USERS", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[int] _FAISS_IDS", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_FAISS_INDEX = None", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[List[float]] _FAISS_VECS", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "faiss = None  # Will operate in in-memory fallback mode", "scope": "", "scopeKind": "", "description": "unavailable"}]}